@model WebWinMVC.Models.JRZLWTViewModel
@{
    var pageTitle = "测试";
    ViewData["Title"] = pageTitle;
}


<div class="col-md-2 d-flex justify-content-center align-items-center">
    <div>
        <h3 class="text-center">一键处理区域</h3>
        <form>
            <div class="result-container d-flex flex-column align-items-center">
                <button type="button" class="btn btn-outline-secondary mb-2" style="width: 5vw;" onclick="exportTableToExcelQuery()">详情导出</button>
                <button type="button" class="btn btn-outline-secondary mb-2" style="width: 5vw;" onclick="exportTableToExcelAnalyse()">清单导出</button>
                <button type="button" class="btn btn-outline-secondary mb-2" style="width: 5vw;" onclick="showOnePageModal()">生成一页纸</button>
                <button type="button" class="btn btn-outline-secondary mb-2" style="width: 5vw;">纳入PSQ</button>
            </div>
        </form>

    </div>
</div>
<!-- 选项模态框 -->
<!-- Modal -->
<div class="modal fade" id="optionsModalOP" tabindex="-1" aria-labelledby="optionsModalLabelOP" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel" style="text-align: center; width: 100%;">问题来源</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <button type="button" class="btn btn-outline-secondary w-100 mb-2" onclick="showDailyQualityModalOP()">即日质量问题</button>
                <button type="button" class="btn btn-outline-secondary w-100 mb-2" onclick="generatePPT('TOP问题')">TOP问题</button>
                <button type="button" class="btn btn-outline-secondary w-100 mb-2" onclick="generatePPT('24小时问题')">24小时问题</button>
                <button type="button" class="btn btn-outline-secondary w-100 mb-2" onclick="openServiceCenterModalOP()">服务中心问题</button>
                <button type="button" class="btn btn-outline-secondary w-100 mb-2" onclick="openServiceCenterModalOP()">其他问题</button>
            </div>
        </div>
    </div>
</div>

<!-- Service Center Modal -->
<div class="modal fade" id="serviceCenterModalOP" tabindex="-1" aria-labelledby="serviceCenterModalLabelOP" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal header removed -->
            <div class="modal-body">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel" style="text-align: center; width: 100%;">服务中心问题</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="serviceCenterFormOP">
                    <input type="text" class="form-control" id="caseNumberOPS" placeholder="输入案例数" required style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="customerVehicleNumberOPS" placeholder="输入客户车辆数" required style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="materialNumberOPS" placeholder="输入物料号" required style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="queryDateOPS" placeholder="查询日期" required style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="faultModeOPS" placeholder="输入故障模式" required style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="faultCodeOPS" placeholder="输入故障码(可选)" required style="margin-top: 1vh;">
                </form>
                <button type="button" class="btn btn-outline-secondary mb-2" style="margin-top: 2vh; display: block; margin-left: auto; margin-right: auto;"
                        onclick="generateServiceCenterReportOP()">
                    生成报告
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Daily Quality Modal -->
<div class="modal fade" id="dailyQualityModalOP" tabindex="-1" aria-labelledby="dailyQualityModalLabelOP" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal header removed -->
            <div class="modal-body">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel" style="text-align: center; width: 100%;">即日质量问题</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    
                </div>
                <!-- Error message container -->
                <form id="dailyQualityFormOP">
                    <input type="text" class="form-control" id="materialNumberOP" name="OldMaterialCode" placeholder="输入物料号" required style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="queryDateOP" name="ApprovalDate" placeholder="审核通过日期(可选)" style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="faultCodeOP" name="FaultCode" placeholder="输入故障码(可选)" style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="breakpointTimeOP" name="ManufacturingMonth" placeholder="断点时间(可选)" style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="vehicleNumberOP" name="VehicleIdentification" placeholder="输入车号或底盘号(可选)" style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="faultModeOP" name="FaultDescription" placeholder="输入故障描述(可选)" style="margin-top: 1vh;">
                    <input type="text" class="form-control" id="failureConditionOP" name="FailureConditionOP" placeholder="输入失效工况(可选)" style="margin-top: 1vh;">
                </form>
                <div style="display:flex;">
                <button type="button" class="btn btn-outline-secondary mb-2" style="margin-top: 2vh; display: block; margin-left: auto; margin-right: auto;"
                            onclick="submitFormAndGeneratePPT(dataStoreOnePage.pageMode.DAILY_QUALITY)">
                    一页纸
                </button>
                <button type="button" class="btn btn-outline-secondary mb-2" style="margin-top: 2vh; display: block; margin-left: auto; margin-right: auto;"
                        onclick="generatePPTOnePage(dataStoreOnePage.textTitleOP,dataStoreOnePage.pageMode.DAILY_QUALITY, dataStoreOnePage.problemDescription, dataStoreOnePage.failureSituation)">
                    纳入SIL
                </button>
            </div>
            </div>
        </div>
    </div>
</div>
<!-- Error message container -->
<div id="error-message" style="display:none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);
z-index: 9999; color: blue; font-weight: normal; padding: 10px; background-color: transparent; border: none; font-size: 18px;"></div>



<script>
    var dataStoreOnePage = {
        problemDescription: [
            "问题来源内容",
            "问题定义内容",
            "问题等级内容",
            "开启日期内容",
            "供应商内容",
            "涉及车型内容",
            "内部车型内容",
            "底盘号内容",
            "生产/购车时间内容",
            "在库时间内容",
            "PQS 编号内容"
        ],
        failureSituation: [
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "是",
            "是",
            "0",
            "否",
            "低",
            "高"
        ],
        textTitleOP: "一页纸",
            pageMode: {
            DAILY_QUALITY: '即日质量问题',
            TOP_ISSUES: 'TOP问题',
            TWENTY_FOUR_HOURS: '24小时问题',
            SERVICE_CENTER: '服务中心问题',
            OTHER_ISSUES: '其他问题'
        },
        contentOPCache: {}, // 修正了这里的错误
    };
    var optionsModalOP;
    function showOnePageModal() {
         optionsModalOP = new bootstrap.Modal(document.getElementById('optionsModalOP'));
        optionsModalOP.show();
    }

    function openServiceCenterModalOP() {
        let serviceCenterModalOP = new bootstrap.Modal(document.getElementById('serviceCenterModalOP'));
        serviceCenterModalOP.show();     
        optionsModalOP.hide();
    }

    function showDailyQualityModalOP() {
        let dailyQualityModalOP = new bootstrap.Modal(document.getElementById('dailyQualityModalOP'));
        dailyQualityModalOP.show();
        optionsModalOP.hide();
    }


    function generatePPTOnePage(titleText,modal, problemDescriptionContents, failureSituationContents) {
        titleText = `市场重点问题 (${dataStoreOnePage.problemDescription[1]} 问题)`;
        console.log("start to create PPT " + titleText + dataStoreOnePage.textTitleOP);
        let pageMode = dataStoreOnePage.pageMode;
        // 创建PPTX文档
        let pres = new PptxGenJS();
        let slide = pres.addSlide();

        // 幻灯片的默认尺寸（宽度和高度以英寸为单位）
        let slideWidth = 10;
        let slideHeight = 5.625;

        // 1. 添加标题框
        let titleHeight = 0.6;
        let titleOpts = {
            x: 0,
            y: 0.1,
            w: slideWidth,
            h: titleHeight,
            fontSize: 24,
            color: "000000",
            align: "center",
            fill: { color: "4682B4" }
        };

        slide.addText(titleText, titleOpts);

        // 2. 计算文本框的宽度和高度
        let sectionWidth = slideWidth / 3;
        let problemDescHeight = titleHeight / 2;
        let failureHeight = titleHeight / 2;
        let remainingHeight = slideHeight - titleHeight;
        let yPos = titleHeight + 0.1;

        // 3. 固定字段标签
        let fixedLabels = [
            "问题来源：",
            "问题定义：",
            "问题等级：",
            "开启日期：",
            "供应商：",
            "涉及车型：",
            "内部车型：",
            "底盘号：",
            "生产/购车时间：",
            "生产/销售数量：",
            "PQS 编号："
        ];
        let failureLabels = [
            "案例数：",
            "失效率（客户）：",
            "失效率（车型）：",
            "失效率（发动机）：",
            "失效区域：",
            "失效里程：",
            "失效工况：",
            "是否按照要求保养：",
            "是否要按照要求返修：",
            "是否为断点失效产品：",
            "是否超边界：",
            "严重度：",
            "可能性："
        ];

        // 根据 titleText 设置问题描述和失效情况内容
        let problemDescriptionText, failureSituationText;

        switch (modal) {
            case pageMode.DAILY_QUALITY:
                problemDescriptionText = fixedLabels.map((label, i) => `${label}${problemDescriptionContents[i] || "default"}`).join("\n");
                failureSituationText = failureLabels.map((label, i) => `${label}${failureSituationContents[i] || "default"}`).join("\n");
                break;
            case pageMode.TOP_ISSUES:
                // 可以根据需要定义 TOP问题的内容
                problemDescriptionText = fixedLabels.map((label, i) => `${label}${problemDescriptionContents[i] || "default"}`).join("\n");
                failureSituationText = failureLabels.map((label, i) => `${label}${failureSituationContents[i] || "default"}`).join("\n");
                break;
            case pageMode.TWENTY_FOUR_HOURS:
                // 可以根据需要定义 24小时问题的内容
                problemDescriptionText = fixedLabels.map((label, i) => `${label}${problemDescriptionContents[i] || "default"}`).join("\n");
                failureSituationText = failureLabels.map((label, i) => `${label}${failureSituationContents[i] || "default"}`).join("\n");
                break;
            case pageMode.SERVICE_CENTER:
                // 可以根据需要定义 服务中心问题的内容
                problemDescriptionText = fixedLabels.map((label, i) => `${label}${problemDescriptionContents[i] || "default"}`).join("\n");
                failureSituationText = failureLabels.map((label, i) => `${label}${failureSituationContents[i] || "default"}`).join("\n");
                break;
            case pageMode.OTHER_ISSUES:
                // 可以根据需要定义 其他问题的内容
                problemDescriptionText = fixedLabels.map((label, i) => `${label}${problemDescriptionContents[i] || "default"}`).join("\n");
                failureSituationText = failureLabels.map((label, i) => `${label}${failureSituationContents[i] || "default"}`).join("\n");
                break;
            default:
                // 默认处理
                problemDescriptionText = fixedLabels.map((label, i) => `${label}${problemDescriptionContents[i] || "default"}`).join("\n");
                failureSituationText = failureLabels.map((label, i) => `${label}${failureSituationContents[i] || "default"}`).join("\n");
                break;
        }

        // 添加文本框
        slide.addText("问题描述", {
            x: 0,
            y: yPos,
            w: sectionWidth,
            h: problemDescHeight,
            fontSize: 18,
            color: "000000",
            align: "center",
            fill: { color: "#ADD8E6" }
        });
        slide.addText("失效情况", {
            x: sectionWidth,
            y: yPos,
            w: slideWidth / 6,
            h: failureHeight,
            fontSize: 18,
            color: "000000",
            align: "center",
            fill: { color: "#ADD8E6" }
        });
        slide.addText("根本原因", {
            x: sectionWidth + slideWidth / 6,
            y: yPos,
            w: (1.5 * slideWidth) / 6,
            h: failureHeight,
            fontSize: 18,
            color: "000000",
            align: "center",
            fill: { color: "#ADD8E6" }
        });
        slide.addText("进展及计划", {
            x: sectionWidth + slideWidth / 6 + (1.5 * slideWidth) / 6,
            y: yPos,
            w: (1.5 * slideWidth) / 6,
            h: failureHeight,
            fontSize: 18,
            color: "000000",
            align: "center",
            fill: { color: "#ADD8E6" }
        });
        slide.addText("售后方案：\n根本原因：\n原因分析：\n", {
            x: sectionWidth + slideWidth / 6,
            y: yPos + problemDescHeight,
            w: (1.5 * slideWidth) / 6,
            h: remainingHeight - problemDescHeight,
            fontSize: 9,
            color: "000000",
            vAlign: "top",
        });
        slide.addText("牵头部门：\n遏制措施：\n长期措施：\n下一步计划：", {
            x: sectionWidth + slideWidth / 6 + (1.5 * slideWidth) / 6,
            y: yPos + problemDescHeight,
            w: (1.5 * slideWidth) / 6,
            h: remainingHeight - problemDescHeight,
            fontSize: 9,
            color: "000000",
            vAlign: "top",
        });
        slide.addText(problemDescriptionText, {
            x: 0,
            y: yPos + problemDescHeight,
            w: sectionWidth,
            h: remainingHeight - problemDescHeight,
            fontSize: 9,
            color: "000000",
            vAlign: "top",
            align: "left",
            bulletStyle: {
                type: 'disc',
                size: 10
            }
        });

        slide.addText(failureSituationText, {
            x: sectionWidth,
            y: yPos + failureHeight,
            w: slideWidth / 6,
            h: remainingHeight - failureHeight,
            fontSize: 9,
            color: "000000",
            vAlign: "top",
            align: "left",
            bulletStyle: {
                type: 'disc',
                size: 10
            }
        });

        // 保存演示文稿
        console.log("开始下载 PPTX 文件...");
        pres.writeFile({
            fileName: `(${dataStoreOnePage.problemDescription[1]} ${dataStoreOnePage.problemDescription[7]})` // 输出为带 VID 的文件
        }).then(() => {
            console.log("PPTX 文件已下载");
        }).catch(err => {
            console.error("生成 PPTX 文件时出错：", err);
        });

    }

    // 示例调用


</script>  @* 导出模块 *@

@section Scripts {
    <script>

        function submitFormAndGeneratePPT(modalOP) {
            let formData = $('#dailyQualityFormOP').serialize(); // 获取表单数据

            // 从表单字段中获取 vehicleIdentification 的值
            let vehicleIdentification = $('#vehicleNumberOP').val();
           

            // 发起两个 AJAX 请求
            let qualityDataRequest = $.ajax({
                url: '/queryAPI/RemoteAccess/dailyqualitydata',
                type: 'GET',
                data: formData
            });

            let vehicleBasicInfoRequest = $.ajax({
                url: '/queryAPI/RemoteAccess/vehiclebasicinfodata',
                type: 'GET',
                data: { VehicleIdentification: vehicleIdentification } // 发送表单字段值作为查询参数
            });

            // 使用 $.when() 等待两个请求都完成
            $.when(qualityDataRequest, vehicleBasicInfoRequest).done(function (qualityDataResponse, vehicleBasicInfoResponse) {
                // 处理 dailyqualitydata 请求的成功回调
                let qualityData = qualityDataResponse[0];
                dataStoreOnePage.contentOPCache = qualityData;

                // 假设 qualityData 是一个包含数据的数组，取第一个对象作为示例
                let data = qualityData[0];

                // 更新 problemDescription 数组
                dataStoreOnePage.problemDescription[0] = modalOP; // 即日质量问题
                //问题定义
                let faultmodeDescriptionOP = $('#faultModeOP').val() || data.faultCodeDescription;
                dataStoreOnePage.problemDescription[1] = `${data.province}${data.filteredVehicleModel}车${faultmodeDescriptionOP}`;
                //根据表单提交的情况
                let requestDate = new Date();
                dataStoreOnePage.problemDescription[3] = requestDate.toISOString().split('T')[0].replace(/-/g, '/'); // 格式为YYYY/MM/DD
                dataStoreOnePage.problemDescription[4] = data.responsibilitySourceSupplierName; // 供应商名称
                dataStoreOnePage.problemDescription[5] = `${data.vehicleType}（${data.fdp}）`;//车型
                dataStoreOnePage.problemDescription[6] = data.internalModelCode; // internalModelCode
                dataStoreOnePage.problemDescription[7] = `${data.van}(${data.vin.slice(-8)})`; // 车号 + (VIN 的后 8 位)
                let manufacturingDate = data.manufacturingMonth;
                let salesDate = new Date(parseInt(data.salesDate, 10) * 86400000 + new Date(1899, 11, 30).getTime()); // 转换 salesDate 为日期
                manufacturingDate = `${manufacturingDate.substring(0, 4)}/${manufacturingDate.substring(4, 6)}/01`; // 格式为 yyyy/mm/dd
                salesDate = `${salesDate.getFullYear()}/${('0' + (salesDate.getMonth() + 1)).slice(-2)}/${('0' + salesDate.getDate()).slice(-2)}`; // 格式为 yyyy/mm/dd
                dataStoreOnePage.problemDescription[8] = `${manufacturingDate}, ${salesDate}`; // 制造月和销售日期

                // 更新 failureSituation 数组
                dataStoreOnePage.failureSituation[0] = qualityData.length; // 返回数组的长度
                dataStoreOnePage.failureSituation[1] = (qualityData.length / 100*100).toFixed(1) + '%';
                dataStoreOnePage.failureSituation[2] = (qualityData.length / 1000*100).toFixed(1) + '%';
                dataStoreOnePage.failureSituation[3] = (qualityData.length / 1200*100).toFixed(1) + '%';
                dataStoreOnePage.failureSituation[4] = data.outboundServiceLocation; // outboundServiceLocation
                dataStoreOnePage.failureSituation[5] = `${data.drivingMileageKM} KM`;//失效里程
                let failureConditionOP = $('#failureConditionOP').val() || "NA";
                dataStoreOnePage.failureSituation[6] = failureConditionOP;  //如果表单传入了失效工况则有失效工况，如果未传入则显示NA
                // 处理 vehiclebasicinfodata 请求的成功回调

                dataStoreOnePage.failureSituation[9] = $('#breakpointTimeOP').val() ? "是" : "否";//判断是否断点失效产品

                let vehicleInfo = vehicleBasicInfoResponse[0];
                dataStoreOnePage.problemDescription[9] = `${vehicleInfo.totalFdpCount} / ${vehicleInfo.filteredDateCount}`; // 生产总数 / 销售总数
                console.log(dataStoreOnePage.contentOPCache);
                console.log(dataStoreOnePage.problemDescription); // 查看更新后的 problemDescription 数组
                console.log(dataStoreOnePage.failureSituation); // 查看更新后的 failureSituation 数组
                console.log('Vehicle Basic Info Data:', vehicleInfo);
                // 可以在这里处理 vehicleInfo 数据，比如更新页面或其他操作
                //生成一页纸报告

                generatePPTOnePage(dataStoreOnePage.problemDescription[1], modalOP, dataStoreOnePage.problemDescription, dataStoreOnePage.failureSituation)
    
               

            }).fail(function (jqXHR, textStatus, errorThrown) {
                let errorMessage = '请求失败，请稍后再试。';
                if (jqXHR.status === 404) {
                    errorMessage = '未找到查询结果，请重新检查查询条件。';
                } else if (jqXHR.status === 400) {
                    errorMessage = '请求参数错误，请重新输入。';
                } else if (jqXHR.status === 500) {
                    errorMessage = '服务器错误，请稍后再试。';
                }
                $('#error-message').text(errorMessage).show();
                setTimeout(function () {
                    $('#error-message').fadeOut();
                }, 2000);
                console.error('请求失败:', textStatus, errorThrown);
            });
      
        }

   
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const modalHeader = document.querySelectorAll('.modal-header');
            modalHeader.forEach(header => {
                let isDragging = false;
                let offset = [0, 0];
                const modal = header.closest('.modal-content');

                header.addEventListener('mousedown', (e) => {
                    isDragging = true;
                    offset = [
                        modal.offsetLeft - e.clientX,
                        modal.offsetTop - e.clientY
                    ];
                });

                document.addEventListener('mouseup', () => {
                    isDragging = false;
                });

                document.addEventListener('mousemove', (e) => {
                    if (isDragging) {
                        modal.style.left = (e.clientX + offset[0]) + 'px';
                        modal.style.top = (e.clientY + offset[1]) + 'px';
                    }
                });
            });

            // Reset the form when modal is hidden
            const modals = ['#serviceCenterModalOP', '#dailyQualityModalOP'];
            modals.forEach(selector => {
                $(selector).on('hidden.bs.modal', function () {
                    $(this).find('form')[0].reset();
                });
            });
        });
    </script>

}
